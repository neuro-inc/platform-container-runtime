apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "platformContainerRuntime.fullname" . }}
  labels: {{ include "platformContainerRuntime.labels.standard" . | nindent 4 }}
    service: platform-container-runtime
spec:
  selector:
    matchLabels:
      app: {{ include "platformContainerRuntime.name" . }}
      release: {{ .Release.Name }}
      service: platform-container-runtime
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 100%
  template:
    metadata:
      labels:
        app: {{ include "platformContainerRuntime.name" . }}
        release: {{ .Release.Name }}
        service: platform-container-runtime
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      {{- if .Values.affinity }}
      affinity: {{ toYaml .Values.affinity | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{ toYaml .Values.tolerations | nindent 6 }}
      {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets: {{ toYaml .Values.imagePullSecrets | nindent 6 }}
      {{- end }}
      volumes:
      - name: host-run
        hostPath:
          path: /var/run
      containers:
      - name: platform-container-runtime
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        {{- if .Values.command }}
        command: {{ toYaml .Values.command | nindent 8 }}
        {{- end }}
        {{- if .Values.args }}
        args: {{ toYaml .Values.args | nindent 8 }}
        {{- end }}
        livenessProbe:
          httpGet:
            path: /api/v1/ping
            port: tcp-web
          initialDelaySeconds: 10
          periodSeconds: 5
          failureThreshold: 12
        readinessProbe:
          httpGet:
            path: /api/v1/ping
            port: tcp-web
          initialDelaySeconds: 10
          periodSeconds: 10
          failureThreshold: 3
        ports:
          - name: tcp-web
            containerPort: {{ .Values.port }}
            hostPort: {{ .Values.port }}
            protocol: TCP
        {{- if .Values.resources }}
        resources: {{ toYaml .Values.resources | nindent 10 }}
        {{- end }}
        env:
        - name: NP_LOG_LEVEL
          value: {{ .Values.logLevel | default "ERROR" | upper }}
        - name: NP_PORT
          value: {{ .Values.port | quote }}
        - name: NP_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NP_KUBE_URL
          value: https://kubernetes.default.svc
        - name: NP_KUBE_AUTH_TYPE
          value: token
        - name: NP_KUBE_CERT_AUTHORITY_PATH
          value: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        - name: NP_KUBE_TOKEN_PATH
          value: /var/run/secrets/kubernetes.io/serviceaccount/token
        {{- if .Values.zipkin }}
        - name: NP_ZIPKIN_URL
          value: {{ .Values.zipkin.url }}
        - name: NP_ZIPKIN_SAMPLE_RATE
          value: {{ .Values.zipkin.sampleRate | default 0 | quote }}
        {{- end }}
        {{- if .Values.sentry }}
        - name: NP_SENTRY_DSN
          value: {{ .Values.sentry.dsn }}
        - name: NP_SENTRY_CLUSTER_NAME
          value: {{ .Values.sentry.clusterName }}
        - name: NP_SENTRY_SAMPLE_RATE
          value: {{ .Values.sentry.sampleRate | default 0 | quote }}
        {{- end }}
        volumeMounts:
        - name: host-run
          mountPath: /hrun
