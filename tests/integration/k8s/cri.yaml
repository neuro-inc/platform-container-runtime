apiVersion: v1
kind: ConfigMap
metadata:
  name: cri
data:
  nginx.conf: |-
    user root root;

    events {}

    http {
        access_log /dev/stdout;
        error_log /dev/stderr;

        server {
            listen 8080 http2;

            location / {
                grpc_pass unix:$RUNTIME_SOCK;
            }
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cri
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  selector:
    matchLabels:
      service: cri
  template:
    metadata:
      labels:
        service: cri
    spec:
      containers:
      - name: cri
        image: nginx
        command: [bash]
        args:
        - -ec
        - |
            if [[ -S /hrun/dockershim.sock ]]
            then
              RUNTIME_SOCK=/hrun/dockershim.sock
            elif [[ -S /hrun/containerd/containerd.sock ]]
            then
              RUNTIME_SOCK=/hrun/containerd/containerd.sock
            elif [[ -S /hrun/crio/crio.sock ]]
            then
              RUNTIME_SOCK=/hrun/crio/crio.sock
            fi

            export RUNTIME_SOCK
            envsubst < /etc/nginx-conf/nginx.conf > /etc/nginx/nginx.conf

            nginx -g "daemon off;"
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: nginx-conf
          mountPath: /etc/nginx-conf
        - name: host-run
          mountPath: /hrun
      volumes:
      - name: nginx-conf
        configMap:
          name: cri
      - name: host-run
        hostPath:
          path: /var/run
---
apiVersion: v1
kind: Service
metadata:
  name: cri
spec:
  type: LoadBalancer
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    service: cri
